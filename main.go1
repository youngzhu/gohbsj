package main

import (
	"fmt"
	"html/template"
	"net/http"
	"youngzy.com/gohbsj/model"
)

type Context struct {
	Request *http.Request
	Data    []model.Product
}

var htmlTemplates *template.Template

func HandleTemplateRequest(w http.ResponseWriter, r *http.Request) {
	path := r.URL.Path
	if path == "" {
		path = "layout.html"
	}

	t := htmlTemplates.Lookup(path)
	if t == nil {
		http.NotFound(w, r)
	} else {
		err := t.Execute(w, Context{r, model.TestProducts})
		if err != nil {
			http.Error(w, err.Error(), http.StatusInternalServerError)
		}
	}
}

//func init() {
//	var err error
//	htmlTemplates = template.New("htmlTemplates")
//	htmlTemplates.Funcs(map[string]interface{}{
//		"intVal": strconv.Atoi,
//	})
//	htmlTemplates, err = htmlTemplates.ParseGlob("resources/template/*.html")
//	if err != nil {
//		panic(err)
//	}
//	http.Handle("/templates/", http.StripPrefix("/templates/",
//		http.HandlerFunc(HandleTemplateRequest)))
//}

func main() {
	http.Handle("/templates/", http.StripPrefix("/templates/",
		http.HandlerFunc(HandleTemplateRequest)))

	err := http.ListenAndServe(":8888", nil)
	if err != nil {
		fmt.Printf("Error: %v", err.Error())
	}
}
